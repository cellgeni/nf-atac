
// nextflow flags
nextflow.enable.moduleBinaries = true

// workflow marapeters
params {
    // process params
    output_dir               = "results"
    publish_mode             = 'copy'
    fragments_filename       = 'atac_fragments.tsv.gz'
    barcode_metrics_filename = "per_barcode_metrics.csv"
    pseudobulk_table_name    = "pseudobulk_table.csv"
    narrowPeaks_dir          = 'narrowPeaks'

    // input arguments
    help           = false
    sample_table   = null
    celltypes      = null
    callPeaks      = null
    inferConsensus = null

    // reference files
    chromsizes = "${projectDir}/reference/hg38.chrom.sizes"
    blacklist  = "${projectDir}/reference/hg38-blacklist.v2.bed"
    tss_bed    = "${projectDir}/reference/hg38_pycistopic_tss.bed"
}

process {
    queue         = 'normal'
    maxRetries    = 5
    errorStrategy = { task.exitStatus in 130..140 ? lowResourceError(sample_id, task.process) : 'finish' }
    container     = '/nfs/cellgeni/singularity/images/scenicplus-fa55dae.sif'
}

// Load config for cisTopic component
includeConfig 'modules/pycistopic/module.config'

singularity {
    enabled    = true
    autoMounts = true
    runOptions = '-B /lustre,/nfs'
    cacheDir   = '/nfs/cellgeni/singularity/images/'
}

executor {
    name           = 'lsf'
    perJobMemLimit = true
}

// Capturing Nextflow log files into a 'reports' directory
import java.time.*
Date now = new Date()

params {
    tracedir  = "reports"
    timestamp = now.format("yyyyMMdd-HH-mm-ss")
}

timeline {
    enabled = true
    file    = "${params.tracedir}/${params.timestamp}_timeline.html"
}

report {
    enabled = true
    file    = "${params.tracedir}/${params.timestamp}_report.html"
}

trace {
    enabled = true
    file    = "${params.tracedir}/${params.timestamp}_trace.tsv"
}

// Unscoped options
outputDir = params.output_dir
cleanup   = true
workDir   = "nf-work"