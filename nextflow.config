
// nextflow flags
nextflow.enable.moduleBinaries = true

// workflow marapeters
params {
    // process params
    output_dir = "results"
    publish_mode = 'copy'
    fragments_filename = 'atac_fragments.tsv.gz'
    barcode_metrics_filename = "per_barcode_metrics.csv"
    // inputs
    help = false
    sample_table = null
    celltypes = null
    cisTopicObject = null
    chromsizes = "/lustre/scratch127/cellgen/cellgeni/aljes/atac-pipeline/data/hg38.chrom.sizes"
    blacklist = "/lustre/scratch127/cellgen/cellgeni/aljes/atac-pipeline/data/hg38-blacklist.v2.bed"
    tss_bed = "/lustre/scratch127/cellgen/cellgeni/aljes/atac-pipeline/data/hg38_pycistopic_tss.bed"
}

process {
    queue = 'normal'
    maxRetries = 5
    errorStrategy = { task.exitStatus in 130 ? lowMemoryError(sample_id, task.process) : 'finish' }
    container = '/nfs/cellgeni/singularity/images/scenicplus-fa55dae.sif'
}

// Load config for cisTopic component
includeConfig 'modules/pycistopic/module.config'

singularity {
    enabled = true
    autoMounts = true
    runOptions  = '-B /lustre,/nfs'
}

executor {
    name = 'lsf'
    perJobMemLimit = true
}

// Capturing Nextflow log files into a 'reports' directory
import java.time.*
Date now = new Date()

params {
    tracedir = "reports"
    timestamp = now.format("yyyyMMdd-HH-mm-ss")
}

timeline {
    enabled = true
    file = "${params.tracedir}/${params.timestamp}_timeline.html"
}

report {
    enabled = true
    file = "${params.tracedir}/${params.timestamp}_report.html"
}

trace {
    enabled = true
    file = "${params.tracedir}/${params.timestamp}_trace.tsv"
}