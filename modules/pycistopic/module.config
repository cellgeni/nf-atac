process {
    if ( params.callPeaks ) {
        withName: 'PYCISTOPIC:PEAKCALLING:SplitCellTypeAnnotation' {
            debug      = true
            cpus       = 1
            memory     = { 4.GB + 4.GB * (task.attempt - 1) }
            publishDir = [
                mode     : params.publish_mode,
                path     : params.output_dir,
                saveAs   : { filename -> if ( filename == 'updated_sample_table.csv' ) { "${filename}" } else { "log/${filename}" } },
                pattern  : "{*.csv,splitcelltypes.log}",
                overwrite: true
            ]
        }
        withName: 'PYCISTOPIC:PEAKCALLING:MakePseudobulk' {
            debug      = true
            cpus       = 4
            queue      = { ( CalculatePseudobulkMemory(fragments_num, task.attempt) > 196 ) ? 'hugemem' : 'normal' }
            memory     = { "${ CalculatePseudobulkMemory(fragments_num, task.attempt) as int }.GB" }
            publishDir = [
                mode     : params.publish_mode,
                path     : { "${params.output_dir}/" },
                saveAs   : { filename -> if ( filename.endsWith(".log") ) { "log/$filename" } else { "pseudobulk/${filename}" } },
                overwrite: true
            ]
            errorStrategy = { MakePseudobulkErrorHandler(task.exitStatus, celltypes) }
        }
        withName: 'PYCISTOPIC:PEAKCALLING:PeakCalling' {
            cpus   = 4
            memory = { 16.GB + 16.GB * (task.attempt - 1) }
            publishDir = [
                mode     : params.publish_mode,
                path     : { "${params.output_dir}/pseudobulk" },
                overwrite: true
            ]
        }
        withName: 'PYCISTOPIC:PEAKCALLING:CollectPeakMetadata' {
            cpus       = 1
            memory     = 4.GB
            publishDir = [
                mode     : params.publish_mode,
                path     : { "${params.output_dir}" },
                pattern  : "*.tsv",
                overwrite: true
            ]
        }
    }
    if ( params.inferConsensus ) {
        withName: 'PYCISTOPIC:INFERPEAKS:InferConsensus' {
            debug      = true
            cpus       = 4
            memory     = { 4.GB + 4.GB * (task.attempt - 1) }
            publishDir = [
                mode     : params.publish_mode,
                path     : { "${params.output_dir}" },
                saveAs   : { filename -> if ( filename.endsWith(".log") ) { "log/$filename" } else { filename } },
                overwrite: true
            ]
        }
        withName: 'PYCISTOPIC:INFERPEAKS:QualityControl' {
            cpus       = 4
            queue      = { (task.attempt > 1) ? 'hugemem' : 'normal' }
            memory     = { 120.GB + 500.GB * (task.attempt - 1) }
            publishDir = [
                mode     : params.publish_mode,
                path     : { "${params.output_dir}/cistopic/${sample_id}" },
                pattern  : "*qc",
                overwrite: true
            ]
        }
        withName: 'PYCISTOPIC:INFERPEAKS:CreatePythonObject' {
            cpus       = 4
            queue      = { (task.attempt > 1) ? 'hugemem' : 'normal' }
            memory     = { 120.GB + 500.GB * (task.attempt - 1) }
            publishDir = [
                mode     : params.publish_mode,
                path     : { "${params.output_dir}/cistopic/${sample_id}" },
                overwrite: true
            ]
        }
        withName: 'PYCISTOPIC:INFERPEAKS:CombinePythonObject' {
            cpus       = 4
            queue      = { (task.attempt > 1) ? 'hugemem' : 'normal' }
            memory     = { 200.GB + 200.GB * (task.attempt - 1) }
            publishDir = [
                mode     : params.publish_mode,
                path     : "${params.output_dir}",
                overwrite: true
            ]
        }
    }
}