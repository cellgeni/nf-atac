process {
    withName: 'PYCISTOPIC:SplitCellTypeAnnotation' {
        debug = true
        executor = 'local'
        cpus = 1
        memory = 4.GB
        publishDir = [
            mode: params.publish_mode,
            path: launchDir,
            saveAs: { filename -> if ( filename == 'updated_sample_table.csv' ) { "metadata/${filename}" } else { "${params.output_dir}/log/${filename}" } },
            pattern: "{*.csv,splitcelltypes.log}",
            overwrite: true
        ]
        errorStrategy = 'terminate'
    }
    withName: 'PYCISTOPIC:MakePseudobulk' {
        debug = true
        cpus = 4
        queue = { ( MakePseudobulkMemory(fragments_num, task.attempt) > 196 ) ? 'hugemem' : 'normal' }
        memory = { "${ MakePseudobulkMemory(fragments_num, task.attempt) as int }.GB" }
        publishDir = [
            mode: params.publish_mode,
            path: { "${params.output_dir}/log" },
            pattern: "*.log",
            overwrite: true
        ]
        errorStrategy = { MakePseudobulkErrorHandler(task.exitStatus, celltypes) }
    }
    withName: 'PYCISTOPIC:PeakCalling' {
        cpus = 4
        memory = { 16.GB + 16.GB * (task.attempt - 1) }
        publishDir = [
            mode: params.publish_mode,
            path: { "${params.output_dir}" },
            overwrite: true
        ]
    }
    withName: 'PYCISTOPIC:InferConsensus' {
        debug = true
        cpus = 4
        memory = { 4.GB + 4.GB * (task.attempt - 1) }
        publishDir = [
            mode: params.publish_mode,
            path: { "${params.output_dir}" },
            saveAs: { filename -> if ( filename.endsWith(".log") ) { "log/$filename" } else { filename } },
            overwrite: true
        ]
    }
    withName: 'PYCISTOPIC:QualityControl' {
        cpus = 4
        queue = { (task.attempt > 1) ? 'hugemem' : 'normal' }
        memory = { 80.GB + 200.GB * (task.attempt - 1) }
        publishDir = [
            mode: params.publish_mode,
            path: { "${params.output_dir}/${sample_id}" },
            pattern: "*qc",
            overwrite: true
        ]
    }
    withName: 'PYCISTOPIC:CreateCisTopicObject' {
        cpus = 4
        queue = { (task.attempt > 1) ? 'hugemem' : 'normal' }
        memory = { 120.GB + 200.GB * (task.attempt - 1) }
        publishDir = [
            mode: params.publish_mode,
            path: { "${params.output_dir}/${sample_id}" },
            overwrite: true
        ]
    }
}